{"ast":null,"code":"//import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n}); //const store = createStore(counterSlice.reducer);\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n}); // const counterReducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case 'INCREMENT':\n//             return {counter: state.counter + 1, showCounter: state.showCounter };\n//         case 'INCREASE':\n//             return {counter: state.counter + action.amount, showCounter: state.showCounter };\n//         case 'DECREMENT':\n//             return {counter: state.counter - 1, showCounter: state.showCounter };\n//         case 'TOGGLE':\n//             return {counter: state.counter, showCounter: !state.showCounter }\n//         default:\n//             return {counter: state.counter, showCounter: state.showCounter };\n//     }\n// };\n//const store = createStore(counterReducer);\n\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["/home/gabriel/ReactJS/redux-project/src/store/index.js"],"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","store","reducer","counterActions","actions"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,mBAAmB,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,WAAW,EAAE;AAA1B,CAA5B;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAAY,EAAEL,mBAFe;AAG7BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KAHK;;AAINQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KANK;;AAONS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACpBH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACH,KATK;;AAUNC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACH;;AAZK;AAHmB,CAAD,CAAhC,C,CAmBA;;AACA,MAAMY,KAAK,GAAGf,cAAc,CAAC;AACzBgB,EAAAA,OAAO,EAAEZ,YAAY,CAACY;AADG,CAAD,CAA5B,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,OAAO,MAAMC,cAAc,GAAGb,YAAY,CAACc,OAApC;AACP,eAAeH,KAAf","sourcesContent":["//import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst initialCounterState = {counter: 0, showCounter: true };\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState: initialCounterState,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.payload;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.showCounter;\n        }\n    }\n});\n\n//const store = createStore(counterSlice.reducer);\nconst store = configureStore({ \n    reducer: counterSlice.reducer\n});\n\n// const counterReducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case 'INCREMENT':\n//             return {counter: state.counter + 1, showCounter: state.showCounter };\n//         case 'INCREASE':\n//             return {counter: state.counter + action.amount, showCounter: state.showCounter };\n//         case 'DECREMENT':\n//             return {counter: state.counter - 1, showCounter: state.showCounter };\n//         case 'TOGGLE':\n//             return {counter: state.counter, showCounter: !state.showCounter }\n//         default:\n//             return {counter: state.counter, showCounter: state.showCounter };\n//     }\n// };\n\n//const store = createStore(counterReducer);\n\nexport const counterActions = counterSlice.actions;\nexport default store;"]},"metadata":{},"sourceType":"module"}