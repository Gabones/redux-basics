{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {},\n\n    increase(state) {},\n\n    toggleCounter(state) {}\n\n  }\n});\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        counter: state.counter + 1,\n        showCounter: state.showCounter\n      };\n\n    case 'INCREASE':\n      return {\n        counter: state.counter + action.amount,\n        showCounter: state.showCounter\n      };\n\n    case 'DECREMENT':\n      return {\n        counter: state.counter - 1,\n        showCounter: state.showCounter\n      };\n\n    case 'TOGGLE':\n      return {\n        counter: state.counter,\n        showCounter: !state.showCounter\n      };\n\n    default:\n      return {\n        counter: state.counter,\n        showCounter: state.showCounter\n      };\n  }\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["/home/gabriel/ReactJS/redux-project/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","toggleCounter","counterReducer","action","type","amount","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,WAAW,EAAE;AAA1B,CAArB;AAEAH,WAAW,CAAC;AACRI,EAAAA,IAAI,EAAE,SADE;AAERH,EAAAA,YAAY,EAAEA,YAFN;AAGRI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACL,OAAN;AACH,KAHK;;AAINM,IAAAA,SAAS,CAACD,KAAD,EAAQ,CAAE,CAJb;;AAKNE,IAAAA,QAAQ,CAACF,KAAD,EAAQ,CAAE,CALZ;;AAMNG,IAAAA,aAAa,CAACH,KAAD,EAAQ,CAAE;;AANjB;AAHF,CAAD,CAAX;;AAaA,MAAMI,cAAc,GAAG,YAAkC;AAAA,MAAjCJ,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXW,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAO;AAACX,QAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CAA1B;AAA6BC,QAAAA,WAAW,EAAEI,KAAK,CAACJ;AAAhD,OAAP;;AACJ,SAAK,UAAL;AACI,aAAO;AAACD,QAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgBU,MAAM,CAACE,MAAjC;AAAyCX,QAAAA,WAAW,EAAEI,KAAK,CAACJ;AAA5D,OAAP;;AACJ,SAAK,WAAL;AACI,aAAO;AAACD,QAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CAA1B;AAA6BC,QAAAA,WAAW,EAAEI,KAAK,CAACJ;AAAhD,OAAP;;AACJ,SAAK,QAAL;AACI,aAAO;AAACD,QAAAA,OAAO,EAAEK,KAAK,CAACL,OAAhB;AAAyBC,QAAAA,WAAW,EAAE,CAACI,KAAK,CAACJ;AAA7C,OAAP;;AACJ;AACI,aAAO;AAACD,QAAAA,OAAO,EAAEK,KAAK,CAACL,OAAhB;AAAyBC,QAAAA,WAAW,EAAEI,KAAK,CAACJ;AAA5C,OAAP;AAVR;AAYH,CAbD;;AAeA,MAAMY,KAAK,GAAGhB,WAAW,CAACY,cAAD,CAAzB;AAEA,eAAeI,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {counter: 0, showCounter: true };\n\ncreateSlice({\n    name: 'counter',\n    initialState: initialState,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        decrement(state) {},\n        increase(state) {},\n        toggleCounter(state) {}\n    }\n});\n\nconst counterReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'INCREMENT':\n            return {counter: state.counter + 1, showCounter: state.showCounter };\n        case 'INCREASE':\n            return {counter: state.counter + action.amount, showCounter: state.showCounter };\n        case 'DECREMENT':\n            return {counter: state.counter - 1, showCounter: state.showCounter };\n        case 'TOGGLE':\n            return {counter: state.counter, showCounter: !state.showCounter }\n        default:\n            return {counter: state.counter, showCounter: state.showCounter };\n    }\n};\n\nconst store = createStore(counterReducer);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}