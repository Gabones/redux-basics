{"ast":null,"code":"//import { createStore } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"./counter-slice\";\nimport authSlice from \"./auth-slice\"; //const store = createStore(counterSlice.reducer);\n\nconst store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    auth: authSlice.reducer\n  }\n}); // const counterReducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case 'INCREMENT':\n//             return {counter: state.counter + 1, showCounter: state.showCounter };\n//         case 'INCREASE':\n//             return {counter: state.counter + action.amount, showCounter: state.showCounter };\n//         case 'DECREMENT':\n//             return {counter: state.counter - 1, showCounter: state.showCounter };\n//         case 'TOGGLE':\n//             return {counter: state.counter, showCounter: !state.showCounter }\n//         default:\n//             return {counter: state.counter, showCounter: state.showCounter };\n//     }\n// };\n//const store = createStore(counterReducer);\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"sources":["/home/gabriel/ReactJS/redux-project/src/store/index.js"],"names":["configureStore","counterReducer","authSlice","store","reducer","counter","auth","counterActions","counterSlice","actions","authActions"],"mappings":"AAAA;AACA,SAASA,cAAT,QAA+B,kBAA/B;AAEA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAOC,SAAP,MAAsB,cAAtB,C,CAEA;;AACA,MAAMC,KAAK,GAAGH,cAAc,CAAC;AACzBI,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAO,EAAEJ,cAAX;AAA2BK,IAAAA,IAAI,EAAEJ,SAAS,CAACE;AAA3C;AADgB,CAAD,CAA5B,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,OAAO,MAAMG,cAAc,GAAGC,YAAY,CAACC,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAA9B;AACP,eAAeN,KAAf","sourcesContent":["//import { createStore } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n\nimport counterReducer from \"./counter-slice\";\nimport authSlice from \"./auth-slice\";\n\n//const store = createStore(counterSlice.reducer);\nconst store = configureStore({ \n    reducer: { counter: counterReducer, auth: authSlice.reducer }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case 'INCREMENT':\n//             return {counter: state.counter + 1, showCounter: state.showCounter };\n//         case 'INCREASE':\n//             return {counter: state.counter + action.amount, showCounter: state.showCounter };\n//         case 'DECREMENT':\n//             return {counter: state.counter - 1, showCounter: state.showCounter };\n//         case 'TOGGLE':\n//             return {counter: state.counter, showCounter: !state.showCounter }\n//         default:\n//             return {counter: state.counter, showCounter: state.showCounter };\n//     }\n// };\n\n//const store = createStore(counterReducer);\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;"]},"metadata":{},"sourceType":"module"}